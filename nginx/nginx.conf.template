# nginx.conf.template
events {
    worker_connections 1024;
}

http {
    # Custom log format with all required fields
    log_format custom_format 'time:$time_iso8601|'
                            'remote_addr:$remote_addr|'
                            'method:$request_method|'
                            'uri:$request_uri|'
                            'status:$status|'
                            'body_bytes_sent:$body_bytes_sent|'
                            'request_time:$request_time|'
                            'upstream_addr:$upstream_addr|'
                            'upstream_status:$upstream_status|'
                            'upstream_response_time:$upstream_response_time|'
                            'pool:$upstream_http_x_app_pool|'
                            'release:$upstream_http_x_release_id';

    access_log /var/log/nginx/access.log custom_format;

    upstream backend {
        server app_blue:3000 max_fails=1 fail_timeout=3s;
        server app_green:3000 backup;
    }

    server {
        listen 80;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
        proxy_pass_header X-Powered-By;

        proxy_connect_timeout 2s;
        proxy_send_timeout 3s;
        proxy_read_timeout 3s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_timeout 10s;
        proxy_next_upstream_tries 2;

        location / {
            proxy_pass http://backend;
        }
    }
}
